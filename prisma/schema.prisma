// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// IMPORTANT: All database tables must be prefixed with 'doghealthy_'

generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// User model
model User {
  id        String   @id @default(uuid()) @db.Uuid
  email     String   @unique @db.VarChar(255)
  fullName  String?  @map("full_name") @db.VarChar(255)
  phone     String?  @db.VarChar(50)
  avatarUrl String?  @map("avatar_url") @db.Text
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz
  updatedAt DateTime @updatedAt @map("updated_at") @db.Timestamptz

  dogs Dog[]

  @@map("doghealthy_users")
}

// Dog model
model Dog {
  id              String    @id @default(uuid()) @db.Uuid
  userId          String    @map("user_id") @db.Uuid
  name            String    @db.VarChar(255)
  breed           String?   @db.VarChar(255)
  gender          String?   @db.VarChar(20)
  birthDate       DateTime? @map("birth_date") @db.Date
  weightKg        Decimal?  @map("weight_kg") @db.Decimal(5, 2)
  color           String?   @db.VarChar(100)
  microchipNumber String?   @map("microchip_number") @db.VarChar(50)
  photoUrl        String?   @map("photo_url") @db.Text
  notes           String?   @db.Text
  isActive        Boolean   @default(true) @map("is_active")
  createdAt       DateTime  @default(now()) @map("created_at") @db.Timestamptz
  updatedAt       DateTime  @updatedAt @map("updated_at") @db.Timestamptz

  user           User            @relation(fields: [userId], references: [id], onDelete: Cascade)
  healthRecords  HealthRecord[]
  vaccinations   Vaccination[]
  medications    Medication[]
  appointments   Appointment[]
  weightLogs     WeightLog[]

  @@index([userId])
  @@index([isActive])
  @@map("doghealthy_dogs")
}

// Health record model
model HealthRecord {
  id               String    @id @default(uuid()) @db.Uuid
  dogId            String    @map("dog_id") @db.Uuid
  recordDate       DateTime  @map("record_date") @db.Date
  recordType       String    @map("record_type") @db.VarChar(50)
  title            String    @db.VarChar(255)
  description      String?   @db.Text
  diagnosis        String?   @db.Text
  treatment        String?   @db.Text
  veterinarianName String?   @map("veterinarian_name") @db.VarChar(255)
  clinicName       String?   @map("clinic_name") @db.VarChar(255)
  cost             Decimal?  @db.Decimal(10, 2)
  attachments      Json?     @db.JsonB
  createdAt        DateTime  @default(now()) @map("created_at") @db.Timestamptz
  updatedAt        DateTime  @updatedAt @map("updated_at") @db.Timestamptz

  dog Dog @relation(fields: [dogId], references: [id], onDelete: Cascade)

  @@index([dogId])
  @@index([recordDate])
  @@index([recordType])
  @@map("doghealthy_health_records")
}

// Vaccination model
model Vaccination {
  id               String    @id @default(uuid()) @db.Uuid
  dogId            String    @map("dog_id") @db.Uuid
  vaccineName      String    @map("vaccine_name") @db.VarChar(255)
  vaccineType      String?   @map("vaccine_type") @db.VarChar(100)
  vaccinationDate  DateTime  @map("vaccination_date") @db.Date
  nextDueDate      DateTime? @map("next_due_date") @db.Date
  batchNumber      String?   @map("batch_number") @db.VarChar(100)
  veterinarianName String?   @map("veterinarian_name") @db.VarChar(255)
  clinicName       String?   @map("clinic_name") @db.VarChar(255)
  notes            String?   @db.Text
  reminderSent     Boolean   @default(false) @map("reminder_sent")
  createdAt        DateTime  @default(now()) @map("created_at") @db.Timestamptz
  updatedAt        DateTime  @updatedAt @map("updated_at") @db.Timestamptz

  dog Dog @relation(fields: [dogId], references: [id], onDelete: Cascade)

  @@index([dogId])
  @@index([nextDueDate])
  @@index([vaccineType])
  @@map("doghealthy_vaccinations")
}

// Medication model
model Medication {
  id              String    @id @default(uuid()) @db.Uuid
  dogId           String    @map("dog_id") @db.Uuid
  medicationName  String    @map("medication_name") @db.VarChar(255)
  dosage          String?   @db.VarChar(100)
  frequency       String?   @db.VarChar(100)
  startDate       DateTime  @map("start_date") @db.Date
  endDate         DateTime? @map("end_date") @db.Date
  prescribedBy    String?   @map("prescribed_by") @db.VarChar(255)
  purpose         String?   @db.Text
  sideEffects     String?   @map("side_effects") @db.Text
  instructions    String?   @db.Text
  isActive        Boolean   @default(true) @map("is_active")
  reminderEnabled Boolean   @default(false) @map("reminder_enabled")
  reminderTimes   Json?     @map("reminder_times") @db.JsonB
  createdAt       DateTime  @default(now()) @map("created_at") @db.Timestamptz
  updatedAt       DateTime  @updatedAt @map("updated_at") @db.Timestamptz

  dog Dog @relation(fields: [dogId], references: [id], onDelete: Cascade)

  @@index([dogId])
  @@index([isActive])
  @@index([endDate])
  @@map("doghealthy_medications")
}

// Appointment model
model Appointment {
  id               String   @id @default(uuid()) @db.Uuid
  dogId            String   @map("dog_id") @db.Uuid
  appointmentDate  DateTime @map("appointment_date") @db.Timestamptz
  appointmentType  String   @map("appointment_type") @db.VarChar(100)
  title            String   @db.VarChar(255)
  description      String?  @db.Text
  location         String?  @db.VarChar(255)
  veterinarianName String?  @map("veterinarian_name") @db.VarChar(255)
  clinicName       String?  @map("clinic_name") @db.VarChar(255)
  clinicPhone      String?  @map("clinic_phone") @db.VarChar(50)
  status           String   @default("scheduled") @db.VarChar(50)
  reminderSent     Boolean  @default(false) @map("reminder_sent")
  notes            String?  @db.Text
  createdAt        DateTime @default(now()) @map("created_at") @db.Timestamptz
  updatedAt        DateTime @updatedAt @map("updated_at") @db.Timestamptz

  dog Dog @relation(fields: [dogId], references: [id], onDelete: Cascade)

  @@index([dogId])
  @@index([appointmentDate])
  @@index([status])
  @@map("doghealthy_appointments")
}

// Weight log model
model WeightLog {
  id              String   @id @default(uuid()) @db.Uuid
  dogId           String   @map("dog_id") @db.Uuid
  weightKg        Decimal  @map("weight_kg") @db.Decimal(5, 2)
  measurementDate DateTime @map("measurement_date") @db.Date
  notes           String?  @db.Text
  createdAt       DateTime @default(now()) @map("created_at") @db.Timestamptz
  updatedAt       DateTime @updatedAt @map("updated_at") @db.Timestamptz

  dog Dog @relation(fields: [dogId], references: [id], onDelete: Cascade)

  @@index([dogId])
  @@index([measurementDate])
  @@map("doghealthy_weight_logs")
}
